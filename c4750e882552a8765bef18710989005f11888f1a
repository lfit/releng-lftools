{
  "comments": [
    {
      "key": {
        "uuid": "2111a8f2_1e7759ea",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-23T00:01:26Z",
      "side": 1,
      "message": "is that accurate? seems this script does more than that...",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b0f4235_844a78a2",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-23T00:01:26Z",
      "side": 1,
      "message": "does this need error handling, like checking if access token is empty or null, or will the oauth2 library throw an error if the refresh fails?",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db511548_ca2c077c",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 12
      },
      "writtenOn": "2019-02-25T19:01:19Z",
      "side": 1,
      "message": "Yeah, it will error with something readable like\noauth2client.client.HttpAccessTokenRefreshError: invalid_client: The client credentials are invalid",
      "parentUuid": "5b0f4235_844a78a2",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241a84e1_d49f6223",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-23T00:01:26Z",
      "side": 1,
      "message": "not super essential, but you may want to consider either using something like urlparse.urljoin, or if you want to just do basic string concatenation, abort with an error in oauth_helper if the configured URL doesn\u0027t end in a trailing slash.",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6df134e_35414f13",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 12
      },
      "writtenOn": "2019-02-25T19:01:19Z",
      "side": 1,
      "message": "Using urlparse. \nEven without a check on the url it raises a human readable error: \n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host\u003d\u0027id](\u0027\u003curllib3.connection.VerifiedHTTPSConnection object at 0x7f668d86e790\u003e: Failed to establish a new connection: [Errno -2] Name or service not known\u0027,))",
      "parentUuid": "241a84e1_d49f6223",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0144df7d_9fb22182",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-23T00:01:26Z",
      "side": 1,
      "message": "can you validate it\u0027s a proper email before you send to the API?",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54dfffb7_9da4457e",
        "filename": "lftools/cli/lfidapi.py",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 12
      },
      "writtenOn": "2019-02-25T19:01:19Z",
      "side": 1,
      "message": "done",
      "parentUuid": "0144df7d_9fb22182",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d774da57_91ef66b9",
        "filename": "lftools/oauth2_helper.py",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-23T00:01:26Z",
      "side": 1,
      "message": "is there a reason you mixed cases here, rather than using all caps or all camel case?  just wondering :-)",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccf6448e_052dde1e",
        "filename": "lftools/oauth2_helper.py",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-23T00:01:26Z",
      "side": 1,
      "message": "I think \"exporting the token as JSON, then import JSON text to array\" could just be shortcutted by using credentials.access_token, which should be set after your call to refresh?",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "059446ed_f2dddeca",
        "filename": "lftools/oauth2_helper.py",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 12
      },
      "writtenOn": "2019-02-25T19:15:57Z",
      "side": 1,
      "message": "good catch, this is my first time using client.OAuth2Credentials and I missed the obvious method there.",
      "parentUuid": "ccf6448e_052dde1e",
      "revId": "c4750e882552a8765bef18710989005f11888f1a",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    }
  ]
}
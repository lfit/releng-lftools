{
  "comments": [
    {
      "key": {
        "uuid": "ac13780b_4e09791b",
        "filename": "lftools/shell/__init__.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "Do we need copyright/license information in an empty file? Seems a little unnecessary, since there\u0027s no code to be copyrighted/licensed.",
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9853ee4_149a46c2",
        "filename": "lftools/shell/__init__.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:37:17Z",
      "side": 1,
      "message": "You do if you want to pass tox.",
      "parentUuid": "ac13780b_4e09791b",
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7124cd7a_e4f89ff2",
        "filename": "lftools/shell/__init__.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T23:50:03Z",
      "side": 1,
      "message": "Oh, weird. Ok then.",
      "parentUuid": "b9853ee4_149a46c2",
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4ef2e03_393fee14",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "Shouldn\u0027t this just be an \"else\"? I know the end result is the same, but it seems weird to me to do if/if not rather than if/else.",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41dbd5a5_425504a5",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4ef2e03_393fee14",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46a85274_cbad0fe0",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "Should hashes be declared outside the loop, and then appended here? As it is, this could run several times in the loop, and would only return the last value found.",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f76e6ec8_99d9ecaa",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:37:17Z",
      "side": 1,
      "message": "No, because this is a list of hashes for each branch",
      "parentUuid": "46a85274_cbad0fe0",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "522024dd_0667aa99",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T23:50:03Z",
      "side": 1,
      "message": "If there are multiple branches (as is implied by a for loop), you\u0027re only going to return the hashes of the last branch in the list. You\u0027re not appending. If there are three branches, \"hashes\" will get assigned the first set of hashes, then overwrite with the second set, then overwrite with the third, and then exit the loop and only return the third set.",
      "parentUuid": "f76e6ec8_99d9ecaa",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97421a47_28954ca4",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:58:43Z",
      "side": 1,
      "message": "Good catch, it\u0027s a matter of naughty variable reuse. There should be a hashlist that gets appended to and returned, not hashes",
      "parentUuid": "522024dd_0667aa99",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2135f444_d56e4ed8",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97421a47_28954ca4",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75580c6c_b35b84e4",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "Since this exception is effectively the end of the method, should it exit or return a value?",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c285bdbd_8ce20349",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:37:17Z",
      "side": 1,
      "message": "Python automatically returns a non-zero code on exception.",
      "parentUuid": "75580c6c_b35b84e4",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f178fc1_07d36e4b",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T23:50:03Z",
      "side": 1,
      "message": "You\u0027re catching the exception. The program will continue to execute.",
      "parentUuid": "c285bdbd_8ce20349",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a54bb443_01334100",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:57:03Z",
      "side": 1,
      "message": "What do you suggest?",
      "parentUuid": "0f178fc1_07d36e4b",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66023bdd_1543bbfa",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-18T00:01:15Z",
      "side": 1,
      "message": "I would suggest you either exit(1) or return False.",
      "parentUuid": "a54bb443_01334100",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40ba3970_2c042ead",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 214
      },
      "writtenOn": "2019-10-18T04:22:11Z",
      "side": 1,
      "message": "I agree, return an explicit value.\nPersonally, I am old school, set things explicitly, makes the code much more readable (at least for me :) )",
      "parentUuid": "66023bdd_1543bbfa",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa08196a_1ce3d04d",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40ba3970_2c042ead",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93df1fab_b596a597",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "Same issue as exception above.",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 63,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4e42368_8f98ffad",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:37:17Z",
      "side": 1,
      "message": "Python automatically returns a non-zero code on exception.",
      "parentUuid": "93df1fab_b596a597",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 63,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efee4587_2edd1ba5",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4e42368_8f98ffad",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 63,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20e334cb_4ef7d5eb",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efee4587_2edd1ba5",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 63,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87eb2500_ebc3dffb",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "This only seems to be checking if there is a Signed-off-by line. There is no check here to see if it matches the Author.",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 83,
        "endChar": 63
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b252973c_3983c4a3",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-18T00:53:21Z",
      "side": 1,
      "message": "No, this compares the SOB email address with the git commit author\u0027s email address (although the cli command is wrong here, from old testing).\n\nLook at the logic that follows.",
      "parentUuid": "87eb2500_ebc3dffb",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 83,
        "endChar": 63
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fd2b8da_b340db21",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-18T01:12:32Z",
      "side": 1,
      "message": "Please take a careful look at this. commit_details is the full commit info, including the author and the SOB. Your regex matches for any SOB line. Then you search the full commit info for the regex, which is the SOB line. Then you check if that returned a result.\n\nSo the way this currently functions is: if there\u0027s a SOB line, it passes. At no point do you grab the author, or compare the SOB email to the author email.",
      "parentUuid": "b252973c_3983c4a3",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 83,
        "endChar": 63
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a221303_33a9697a",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-18T01:17:20Z",
      "side": 1,
      "message": "see my comment about the wrong cli line :) \nthis patch wasn\u0027t supposed to be pushed, I had two directories going (oops). Cleaning up the other one now.",
      "parentUuid": "6fd2b8da_b340db21",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 83,
        "endChar": 63
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acd2b3f3_e13a2db5",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a221303_33a9697a",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 83,
        "endChar": 63
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5462778_8bbccdd5",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acd2b3f3_e13a2db5",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 83,
        "endChar": 63
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c34441ad_3f554bb7",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 192
      },
      "writtenOn": "2019-10-17T22:41:23Z",
      "side": 1,
      "message": "Same issue as exception above.",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 92,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "264e10b4_ffe3c9a4",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-17T23:37:17Z",
      "side": 1,
      "message": "Python automatically returns a non-zero code on exception.",
      "parentUuid": "c34441ad_3f554bb7",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 92,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a262e8d8_1f6a2a3b",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "264e10b4_ffe3c9a4",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 92,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efb0f56_07b0e65a",
        "filename": "lftools/shell/dco.py",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 340
      },
      "writtenOn": "2019-10-28T19:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a262e8d8_1f6a2a3b",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 92,
        "endChar": 20
      },
      "revId": "52c98016039a5328bbeeb3bea41dc8dc6cc1ddb1",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    }
  ]
}
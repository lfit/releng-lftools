{
  "comments": [
    {
      "key": {
        "uuid": "5effe37d_9726672a",
        "filename": "lftools/cli/deploy.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-05-08T13:00:49Z",
      "side": 1,
      "message": "Why are you removing the ability to pass multiple patterns as separate \u0027--pattern\u0027 params?\n\nGiven the change in actual task, it looks like you\u0027re expecting a pattern to be whitespace separated instead. I find that to be a downgrade in usability.",
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ca5e8c3_3551eafc",
        "filename": "lftools/cli/deploy.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 29
      },
      "writtenOn": "2019-05-08T13:40:52Z",
      "side": 1,
      "message": "Andy - Thanks for the input! \n\nThis is _not_ truly treated as multiple values the way we are handling in the code in copy_archives() fun and instead treated a tuple with a single value. For example when \u0027multiple\u003dTrue\u0027, this sets var pattern as follows.\n\npattern\u003d(\u0027**/*.prop **/*.log **/target/surefire-reports/*-output.txt **/target/failsafe-reports/failsafe-summary.xml **/hs_err_*.log **/target/feature/feature.xml\u0027,)\n\nwhich is incorrect later when you are processing regex in deploy_archives().",
      "parentUuid": "5effe37d_9726672a",
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3554d9e_93b6b568",
        "filename": "lftools/cli/deploy.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-05-08T13:57:53Z",
      "side": 1,
      "message": "Ok, so that\u0027s the reason for the .split() being added in the function, but since you\u0027re now handling the whitespace insertion (since this doesn\u0027t actually add it as an array?) then again, I ask, why remove the multiple\u003dTrue since you\u0027re now handling it?",
      "parentUuid": "4ca5e8c3_3551eafc",
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a462a03_16fd959b",
        "filename": "lftools/cli/deploy.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 29
      },
      "writtenOn": "2019-05-09T03:12:23Z",
      "side": 1,
      "message": "From the upstream code we are defining the $ARCHIVE_ARTIFATS as a space separated string value, which is passed as env variable to the scripts logs-deploy.sh [1.].     \n\nARCHIVE_ARTIFACTS\u003d\u0027**/*.prop **/*.log **/target/surefire-reports/*-output.txt **/target/failsafe-reports/failsafe-summary.xml **/hs_err_*.log **/target/feature/feature.xml\u0027 \n\n[1.] https://github.com/lfit/releng-global-jjb/blob/master/shell/logs-deploy.sh\n\nWe set `multiple\u003dTrue` in deploy_archives() creates this as a single tuple, but in the code [2.] we are _not_ handling tuples, because we further need to break them down proper search path before passing it to paths.extend().\n\n[2.] https://github.com/lfit/releng-lftools/blob/master/lftools/deploy.py#L188\n\nFor ex these two lines:\n\n        search \u003d os.path.join(workspace, p)\n        paths.extend(glob2.glob(search, recursive\u003dTrue))\n\nget replaced as follows:\n\n        search \u003d os.path.join($WORKSPACE, \u0027**/*.prop **/*.log **/target/surefire-reports/*-output.txt **/target/failsafe-reports/failsafe-summary.xml **/hs_err_*.log **/target/feature/feature.xml\u0027)\n        paths.extend(glob2.glob(search, recursive\u003dTrue))\n\nInstead, this should iteratively be handled as follow, in example below:\n\n        paths.extend(glob2.glob(\u0027$WORKSPACE/**/*.prop\u0027, recursive\u003dTrue))\n        paths.extend(glob2.glob(\u0027$WORKSPACE/**/*.log\u0027, recursive\u003dTrue))\n        paths.extend(glob2.glob(\u0027$WORKSPACE/**/target/surefire-reports/*-output.txt\u0027, recursive\u003dTrue))\n        paths.extend(glob2.glob(\u0027$WORKSPACE/**/hs_err_*.log\u0027, recursive\u003dTrue))\n        paths.extend(glob2.glob(\u0027$WORKSPACE/**/target/feature/feature.xml\u0027, recursive\u003dTrue))\n\nThe other way is just to extract whatever is passed into the `-p \u003clist pattern\u003e\n` and reformat this into a properly tuple? this would still be required to be handled internally.",
      "parentUuid": "b3554d9e_93b6b568",
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b101d31_ba6fecde",
        "filename": "lftools/cli/deploy.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 8
      },
      "writtenOn": "2019-05-09T03:18:00Z",
      "side": 1,
      "message": "We do not need to remove multiple\u003dTrue here. It just allows us to specify the pattern option multiple times which can be useful.\n\nThis is separate from the issue which you\u0027ve identified where global-jjb log ship is passing multiple patterns into a single pattern as a space separated list. That is handled in the other file with split() already.",
      "parentUuid": "3a462a03_16fd959b",
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "878f101e_da7431bd",
        "filename": "lftools/cli/deploy.py",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 29
      },
      "writtenOn": "2019-05-09T04:10:39Z",
      "side": 1,
      "message": "okay, so the way is to handle both use cases?\n\n$lftools deploy archives -p \"${ARCHIVE_ARTIFACTS:-}\" \"$nexus_url\" \"$nexus_path\" \"$WORKSPACE\"\n\n1. -p \u0027pattern1 pattern2 patterN\u0027\n2. -p pattern1 -p pattern2 -p patterN",
      "parentUuid": "4b101d31_ba6fecde",
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8fe1156_b38dd6cc",
        "filename": "releasenotes/notes/fix-deploy-archives-826d9360f271ca59.yaml",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-05-08T13:00:49Z",
      "side": 1,
      "message": "Dangling whitespace",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 7
      },
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "233315da_779a8da3",
        "filename": "releasenotes/notes/fix-deploy-archives-826d9360f271ca59.yaml",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 29
      },
      "writtenOn": "2019-05-08T13:40:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f8fe1156_b38dd6cc",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 7
      },
      "revId": "1bcdfc70434950570a0ad5602d5bd39919c43785",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": false
    }
  ]
}
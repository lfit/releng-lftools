[tox]
minversion = 2.0
envlist =
    coala,
    docs,
    docs-linkcheck,
    license,
    pre-commit,
    py35,
    py36,
    py37,
    py38
skip_missing_interpreters = true

[testenv]
basepython = python3
deps = -r{toxinidir}/requirements-test.txt
commands = pytest

[testenv:coala]
basepython = python3
deps =
    coala
    coala-bears
    nodeenv
    numpy
commands =
    nodeenv -p
    npm install --global remark-cli remark-lint write-good
    coala --non-interactive

[testenv:docs]
basepython = python3
deps = -rrequirements-docs.txt
extras = openstack
commands =
    sphinx-build -W -b html -n -d {envtmpdir}/doctrees ./docs/ {toxinidir}/docs/_build/html

[testenv:docs-linkcheck]
basepython = python3
deps = -rrequirements-docs.txt
extras = openstack
commands = sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees ./docs/ {toxinidir}/docs/_build/linkcheck

[testenv:latest-upstream]
basepython = python3
deps = -r{toxinidir}/requirements-test.txt
commands =
    pip install -U python-jenkins requests shade
    pytest

[testenv:license]
basepython = python3
deps =
    lftools
commands =
    lftools license check-dir lftools
    lftools license check-dir -r '.+' shell

[testenv:pre-commit]
basepython = python3
deps = pre-commit
commands =
    pre-commit run --all-files
    pre-commit run gitlint --hook-stage commit-msg --commit-msg-filename .git/COMMIT_EDITMSG

[testenv:reno]
basepython = python3
deps = reno
commands = reno {posargs:--help}
